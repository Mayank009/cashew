<?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateCashewTable extends Migration {

	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		Schema::create('_cashew_subscriptions', function(Blueprint $table)
		{
			$table->increments('id');
			$table->string('user_id', 51);
			$table->string('customer_id', 51)->nullable()->default(null);
			$table->string('subscription_id', 51)->nullable()->default(null);
			$table->dateTime('trial_ends_at')->nullable()->default(null);
			$table->dateTime('subscription_ends_at')->nullable()->default(null);
			$table->string('plan', 51)->nullable()->default(null);
			$table->integer('quantity')->default(0);
			$table->string('last_four', 4)->nullable()->default(null);
			$table->date('card_exp_date')->nullable()->default(null);
			$table->enum('status', array('trialing', 'active', 'canceled', 'expired'))->default('trialing');
			$table->dateTime('created_at');
			$table->dateTime('updated_at');
			$table->dateTime('subscribed_at')->nullable()->default(null);
			$table->dateTime('canceled_at')->nullable()->default(null);
			$table->dateTime('expired_at')->nullable()->default(null);
		});

		Schema::create('_cashew_invoices', function(Blueprint $table)
		{
			$table->increments('id');
			$table->string('user_id', 51);
			$table->string('customer_id', 51);
			$table->string('subscription_id', 51);
			$table->string('invoice_id', 51)->unique();
			$table->string('currency', 5);
			$table->dateTime('date');
			$table->dateTime('period_start');
			$table->dateTime('period_end');
			$table->decimal('total', 31, 2);
			$table->decimal('subtotal', 31, 2);
			$table->decimal('discount', 31, 2);
			$table->dateTime('created_at');
			$table->dateTime('updated_at');
		});
	}

	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::table('_cashew_subscriptions', function(Blueprint $table)
		{
			$table->drop();
		});

		Schema::table('_cashew_invoices', function(Blueprint $table)
		{
			$table->drop();
		});
	}
}